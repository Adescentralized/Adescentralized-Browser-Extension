!function(){"use strict";console.log("ðŸ“¦ External Stellar wallet provider script loading..."),window.stellarWallet=new class{constructor(){this.isConnected=!1,this.currentAccount=null,this.eventListeners={},console.log("âœ… StellarWalletProvider created")}async connect(){try{const e=await new Promise((e,t)=>{window.postMessage({type:"STELLAR_WALLET_REQUEST",method:"connect"},"*");const n=setTimeout(()=>{t(new Error("Connection timeout"))},1e4);window.addEventListener("message",function s(o){"STELLAR_WALLET_RESPONSE"===o.data.type&&"connect"===o.data.method&&(clearTimeout(n),window.removeEventListener("message",s),o.data.success?e(o.data.data):t(new Error(o.data.error)))})});return this.isConnected=!0,this.currentAccount=e.publicKey,this.emitEvent("connect",e),e}catch(e){throw this.emitEvent("disconnect"),e}}async getPublicKey(){if(!this.isConnected)throw new Error("Wallet not connected. Call connect() first.");return this.currentAccount}async getBalance(){return new Promise((e,t)=>{window.postMessage({type:"STELLAR_WALLET_REQUEST",method:"getBalance"},"*");const n=setTimeout(()=>{t(new Error("Balance request timeout"))},1e4);window.addEventListener("message",function s(o){"STELLAR_WALLET_RESPONSE"===o.data.type&&"getBalance"===o.data.method&&(clearTimeout(n),window.removeEventListener("message",s),o.data.success?e(o.data.data):t(new Error(o.data.error)))})})}async sendPayment(e,t,n){return new Promise((s,o)=>{window.postMessage({type:"STELLAR_WALLET_REQUEST",method:"sendPayment",data:{destination:e,amount:t,memo:n}},"*");const a=setTimeout(()=>{o(new Error("Payment request timeout"))},3e4);window.addEventListener("message",function e(t){"STELLAR_WALLET_RESPONSE"===t.data.type&&"sendPayment"===t.data.method&&(clearTimeout(a),window.removeEventListener("message",e),t.data.success?s(t.data.data):o(new Error(t.data.error)))})})}isWalletConnected(){return this.isConnected}disconnect(){this.isConnected=!1,this.currentAccount=null,this.emitEvent("disconnect")}on(e,t){this.eventListeners[e]||(this.eventListeners[e]=[]),this.eventListeners[e].push(t)}off(e,t){this.eventListeners[e]&&(this.eventListeners[e]=this.eventListeners[e].filter(e=>e!==t))}emitEvent(e,t){this.eventListeners[e]&&this.eventListeners[e].forEach(e=>e(t))}},window.isStellarWalletInstalled=!0,window.stellar=window.stellarWallet,console.log("ðŸŒŸ External Stellar Wallet Provider loaded successfully!"),console.log("ðŸŒŸ window.stellarWallet is now available:",typeof window.stellarWallet),console.log("Use window.stellarWallet.connect() to connect"),window.dispatchEvent(new CustomEvent("stellarWalletReady",{detail:{wallet:window.stellarWallet}}))}();